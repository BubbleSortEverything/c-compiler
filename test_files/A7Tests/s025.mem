Var runningSum: type int [mem: Global  size: 1  loc: 0] [line: 3]
Sibling: 1  Func sum: returns type int [line: 4]
.   Child: 0  Param x: type int [mem: Param  size: 1  loc: -2] [line: 4]
.   Child: 1  Compound [line: 4]
.   .   Child: 0  Var runningSum: static type int [mem: Static  size: 1  loc: -1] [line: 5]
.   .   .   Child: 0  Const 0 : type int [line: 5]
.   .   Child: 1  Assign += : type int [line: 7]
.   .   .   Child: 0  Id runningSum: static type int [mem: Static  size: 1  loc: -1] [line: 7]
.   .   .   Child: 1  Id x: type int [mem: Param  size: 1  loc: -2] [line: 7]
.   .   Sibling: 1  Return [line: 8]
.   .   .   Child: 0  Id runningSum: static type int [mem: Static  size: 1  loc: -1] [line: 8]
Sibling: 2  Func main: returns type void [line: 11]
.   Child: 1  Compound [line: 12]
.   .   Child: 1  Assign = : type int [line: 13]
.   .   .   Child: 0  Id runningSum: type int [mem: Global  size: 1  loc: 0] [line: 13]
.   .   .   Child: 1  Const 7000 : type int [line: 13]
.   .   Sibling: 1  Call output: type void [line: 14]
.   .   .   Child: 0  Id runningSum: type int [mem: Global  size: 1  loc: 0] [line: 14]
.   .   Sibling: 2  Call sum: type int [line: 16]
.   .   .   Child: 0  Const 666 : type int [line: 16]
.   .   Sibling: 3  Call sum: type int [line: 17]
.   .   .   Child: 0  Const 3 : type int [line: 17]
.   .   Sibling: 4  Call output: type void [line: 18]
.   .   .   Child: 0  Call sum: type int [line: 18]
.   .   .   .   Child: 0  Const 0 : type int [line: 18]
.   .   Sibling: 5  Call output: type void [line: 20]
.   .   .   Child: 0  Id runningSum: type int [mem: Global  size: 1  loc: 0] [line: 20]
Number of warnings: 0
Number of errors: 0
