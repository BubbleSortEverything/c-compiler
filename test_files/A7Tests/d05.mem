Func main: returns type void [line: 2]
.   Child: 1  Compound [line: 3]
.   .   Child: 0  Var a: type int [mem: Local  size: 1  loc: -2] [line: 4]
.   .   Sibling: 1  Var b: type int [mem: Local  size: 1  loc: -3] [line: 4]
.   .   Sibling: 2  Var c: type int [mem: Local  size: 1  loc: -4] [line: 4]
.   .   Child: 1  Assign = : type int [line: 5]
.   .   .   Child: 0  Id a: type int [mem: Local  size: 1  loc: -2] [line: 5]
.   .   .   Child: 1  Const 213 : type int [line: 5]
.   .   Sibling: 1  Assign = : type int [line: 6]
.   .   .   Child: 0  Id b: type int [mem: Local  size: 1  loc: -3] [line: 6]
.   .   .   Child: 1  Const 11 : type int [line: 6]
.   .   Sibling: 2  Assign = : type int [line: 7]
.   .   .   Child: 0  Id c: type int [mem: Local  size: 1  loc: -4] [line: 7]
.   .   .   Child: 1  Const 4133 : type int [line: 7]
.   .   Sibling: 3  Call outputb: type void [line: 9]
.   .   .   Child: 0  Op or : type bool [line: 9]
.   .   .   .   Child: 0  Op > : type bool [line: 9]
.   .   .   .   .   Child: 0  Id a: type int [mem: Local  size: 1  loc: -2] [line: 9]
.   .   .   .   .   Child: 1  Id b: type int [mem: Local  size: 1  loc: -3] [line: 9]
.   .   .   .   Child: 1  Op and : type bool [line: 9]
.   .   .   .   .   Child: 0  Op <= : type bool [line: 9]
.   .   .   .   .   .   Child: 0  Id b: type int [mem: Local  size: 1  loc: -3] [line: 9]
.   .   .   .   .   .   Child: 1  Id c: type int [mem: Local  size: 1  loc: -4] [line: 9]
.   .   .   .   .   Child: 1  Op >= : type bool [line: 9]
.   .   .   .   .   .   Child: 0  Id c: type int [mem: Local  size: 1  loc: -4] [line: 9]
.   .   .   .   .   .   Child: 1  Id a: type int [mem: Local  size: 1  loc: -2] [line: 9]
.   .   Sibling: 4  Call outputb: type void [line: 10]
.   .   .   Child: 0  Op or : type bool [line: 10]
.   .   .   .   Child: 0  Op and : type bool [line: 10]
.   .   .   .   .   Child: 0  Op > : type bool [line: 10]
.   .   .   .   .   .   Child: 0  Id a: type int [mem: Local  size: 1  loc: -2] [line: 10]
.   .   .   .   .   .   Child: 1  Id b: type int [mem: Local  size: 1  loc: -3] [line: 10]
.   .   .   .   .   Child: 1  Op <= : type bool [line: 10]
.   .   .   .   .   .   Child: 0  Id b: type int [mem: Local  size: 1  loc: -3] [line: 10]
.   .   .   .   .   .   Child: 1  Id c: type int [mem: Local  size: 1  loc: -4] [line: 10]
.   .   .   .   Child: 1  Op >= : type bool [line: 10]
.   .   .   .   .   Child: 0  Id c: type int [mem: Local  size: 1  loc: -4] [line: 10]
.   .   .   .   .   Child: 1  Id a: type int [mem: Local  size: 1  loc: -2] [line: 10]
.   .   Sibling: 5  Call outputb: type void [line: 11]
.   .   .   Child: 0  Op or : type bool [line: 11]
.   .   .   .   Child: 0  Op and : type bool [line: 11]
.   .   .   .   .   Child: 0  Op > : type bool [line: 11]
.   .   .   .   .   .   Child: 0  Id a: type int [mem: Local  size: 1  loc: -2] [line: 11]
.   .   .   .   .   .   Child: 1  Id b: type int [mem: Local  size: 1  loc: -3] [line: 11]
.   .   .   .   .   Child: 1  Op <= : type bool [line: 11]
.   .   .   .   .   .   Child: 0  Id b: type int [mem: Local  size: 1  loc: -3] [line: 11]
.   .   .   .   .   .   Child: 1  Id c: type int [mem: Local  size: 1  loc: -4] [line: 11]
.   .   .   .   Child: 1  Op and : type bool [line: 11]
.   .   .   .   .   Child: 0  Op >= : type bool [line: 11]
.   .   .   .   .   .   Child: 0  Id c: type int [mem: Local  size: 1  loc: -4] [line: 11]
.   .   .   .   .   .   Child: 1  Id a: type int [mem: Local  size: 1  loc: -2] [line: 11]
.   .   .   .   .   Child: 1  Op >= : type bool [line: 11]
.   .   .   .   .   .   Child: 0  Id c: type int [mem: Local  size: 1  loc: -4] [line: 11]
.   .   .   .   .   .   Child: 1  Id a: type int [mem: Local  size: 1  loc: -2] [line: 11]
.   .   Sibling: 6  Call outputb: type void [line: 12]
.   .   .   Child: 0  Op or : type bool [line: 12]
.   .   .   .   Child: 0  Op not : type bool [line: 12]
.   .   .   .   .   Child: 0  Op > : type bool [line: 12]
.   .   .   .   .   .   Child: 0  Id a: type int [mem: Local  size: 1  loc: -2] [line: 12]
.   .   .   .   .   .   Child: 1  Id b: type int [mem: Local  size: 1  loc: -3] [line: 12]
.   .   .   .   Child: 1  Op and : type bool [line: 12]
.   .   .   .   .   Child: 0  Op <= : type bool [line: 12]
.   .   .   .   .   .   Child: 0  Id b: type int [mem: Local  size: 1  loc: -3] [line: 12]
.   .   .   .   .   .   Child: 1  Id c: type int [mem: Local  size: 1  loc: -4] [line: 12]
.   .   .   .   .   Child: 1  Op >= : type bool [line: 12]
.   .   .   .   .   .   Child: 0  Id c: type int [mem: Local  size: 1  loc: -4] [line: 12]
.   .   .   .   .   .   Child: 1  Id a: type int [mem: Local  size: 1  loc: -2] [line: 12]
.   .   Sibling: 7  Call outputb: type void [line: 13]
.   .   .   Child: 0  Op or : type bool [line: 13]
.   .   .   .   Child: 0  Op and : type bool [line: 13]
.   .   .   .   .   Child: 0  Op not : type bool [line: 13]
.   .   .   .   .   .   Child: 0  Op > : type bool [line: 13]
.   .   .   .   .   .   .   Child: 0  Id a: type int [mem: Local  size: 1  loc: -2] [line: 13]
.   .   .   .   .   .   .   Child: 1  Id b: type int [mem: Local  size: 1  loc: -3] [line: 13]
.   .   .   .   .   Child: 1  Op <= : type bool [line: 13]
.   .   .   .   .   .   Child: 0  Id b: type int [mem: Local  size: 1  loc: -3] [line: 13]
.   .   .   .   .   .   Child: 1  Id c: type int [mem: Local  size: 1  loc: -4] [line: 13]
.   .   .   .   Child: 1  Op >= : type bool [line: 13]
.   .   .   .   .   Child: 0  Id c: type int [mem: Local  size: 1  loc: -4] [line: 13]
.   .   .   .   .   Child: 1  Id a: type int [mem: Local  size: 1  loc: -2] [line: 13]
.   .   Sibling: 8  Call outnl: type void [line: 14]
.   .   Sibling: 9  Assign = : type int [line: 16]
.   .   .   Child: 0  Id b: type int [mem: Local  size: 1  loc: -3] [line: 16]
.   .   .   Child: 1  Const 213 : type int [line: 16]
.   .   Sibling: 10  Assign = : type int [line: 17]
.   .   .   Child: 0  Id c: type int [mem: Local  size: 1  loc: -4] [line: 17]
.   .   .   Child: 1  Const 11 : type int [line: 17]
.   .   Sibling: 11  Assign = : type int [line: 18]
.   .   .   Child: 0  Id a: type int [mem: Local  size: 1  loc: -2] [line: 18]
.   .   .   Child: 1  Const 4133 : type int [line: 18]
.   .   Sibling: 12  Call outputb: type void [line: 20]
.   .   .   Child: 0  Op or : type bool [line: 20]
.   .   .   .   Child: 0  Op > : type bool [line: 20]
.   .   .   .   .   Child: 0  Id a: type int [mem: Local  size: 1  loc: -2] [line: 20]
.   .   .   .   .   Child: 1  Id b: type int [mem: Local  size: 1  loc: -3] [line: 20]
.   .   .   .   Child: 1  Op and : type bool [line: 20]
.   .   .   .   .   Child: 0  Op <= : type bool [line: 20]
.   .   .   .   .   .   Child: 0  Id b: type int [mem: Local  size: 1  loc: -3] [line: 20]
.   .   .   .   .   .   Child: 1  Id c: type int [mem: Local  size: 1  loc: -4] [line: 20]
.   .   .   .   .   Child: 1  Op >= : type bool [line: 20]
.   .   .   .   .   .   Child: 0  Id c: type int [mem: Local  size: 1  loc: -4] [line: 20]
.   .   .   .   .   .   Child: 1  Id a: type int [mem: Local  size: 1  loc: -2] [line: 20]
.   .   Sibling: 13  Call outputb: type void [line: 21]
.   .   .   Child: 0  Op or : type bool [line: 21]
.   .   .   .   Child: 0  Op and : type bool [line: 21]
.   .   .   .   .   Child: 0  Op > : type bool [line: 21]
.   .   .   .   .   .   Child: 0  Id a: type int [mem: Local  size: 1  loc: -2] [line: 21]
.   .   .   .   .   .   Child: 1  Id b: type int [mem: Local  size: 1  loc: -3] [line: 21]
.   .   .   .   .   Child: 1  Op <= : type bool [line: 21]
.   .   .   .   .   .   Child: 0  Id b: type int [mem: Local  size: 1  loc: -3] [line: 21]
.   .   .   .   .   .   Child: 1  Id c: type int [mem: Local  size: 1  loc: -4] [line: 21]
.   .   .   .   Child: 1  Op >= : type bool [line: 21]
.   .   .   .   .   Child: 0  Id c: type int [mem: Local  size: 1  loc: -4] [line: 21]
.   .   .   .   .   Child: 1  Id a: type int [mem: Local  size: 1  loc: -2] [line: 21]
.   .   Sibling: 14  Call outputb: type void [line: 22]
.   .   .   Child: 0  Op or : type bool [line: 22]
.   .   .   .   Child: 0  Op and : type bool [line: 22]
.   .   .   .   .   Child: 0  Op > : type bool [line: 22]
.   .   .   .   .   .   Child: 0  Id a: type int [mem: Local  size: 1  loc: -2] [line: 22]
.   .   .   .   .   .   Child: 1  Id b: type int [mem: Local  size: 1  loc: -3] [line: 22]
.   .   .   .   .   Child: 1  Op <= : type bool [line: 22]
.   .   .   .   .   .   Child: 0  Id b: type int [mem: Local  size: 1  loc: -3] [line: 22]
.   .   .   .   .   .   Child: 1  Id c: type int [mem: Local  size: 1  loc: -4] [line: 22]
.   .   .   .   Child: 1  Op and : type bool [line: 22]
.   .   .   .   .   Child: 0  Op >= : type bool [line: 22]
.   .   .   .   .   .   Child: 0  Id c: type int [mem: Local  size: 1  loc: -4] [line: 22]
.   .   .   .   .   .   Child: 1  Id a: type int [mem: Local  size: 1  loc: -2] [line: 22]
.   .   .   .   .   Child: 1  Op >= : type bool [line: 22]
.   .   .   .   .   .   Child: 0  Id c: type int [mem: Local  size: 1  loc: -4] [line: 22]
.   .   .   .   .   .   Child: 1  Id a: type int [mem: Local  size: 1  loc: -2] [line: 22]
.   .   Sibling: 15  Call outputb: type void [line: 23]
.   .   .   Child: 0  Op or : type bool [line: 23]
.   .   .   .   Child: 0  Op not : type bool [line: 23]
.   .   .   .   .   Child: 0  Op > : type bool [line: 23]
.   .   .   .   .   .   Child: 0  Id a: type int [mem: Local  size: 1  loc: -2] [line: 23]
.   .   .   .   .   .   Child: 1  Id b: type int [mem: Local  size: 1  loc: -3] [line: 23]
.   .   .   .   Child: 1  Op and : type bool [line: 23]
.   .   .   .   .   Child: 0  Op <= : type bool [line: 23]
.   .   .   .   .   .   Child: 0  Id b: type int [mem: Local  size: 1  loc: -3] [line: 23]
.   .   .   .   .   .   Child: 1  Id c: type int [mem: Local  size: 1  loc: -4] [line: 23]
.   .   .   .   .   Child: 1  Op >= : type bool [line: 23]
.   .   .   .   .   .   Child: 0  Id c: type int [mem: Local  size: 1  loc: -4] [line: 23]
.   .   .   .   .   .   Child: 1  Id a: type int [mem: Local  size: 1  loc: -2] [line: 23]
.   .   Sibling: 16  Call outputb: type void [line: 24]
.   .   .   Child: 0  Op or : type bool [line: 24]
.   .   .   .   Child: 0  Op and : type bool [line: 24]
.   .   .   .   .   Child: 0  Op not : type bool [line: 24]
.   .   .   .   .   .   Child: 0  Op > : type bool [line: 24]
.   .   .   .   .   .   .   Child: 0  Id a: type int [mem: Local  size: 1  loc: -2] [line: 24]
.   .   .   .   .   .   .   Child: 1  Id b: type int [mem: Local  size: 1  loc: -3] [line: 24]
.   .   .   .   .   Child: 1  Op <= : type bool [line: 24]
.   .   .   .   .   .   Child: 0  Id b: type int [mem: Local  size: 1  loc: -3] [line: 24]
.   .   .   .   .   .   Child: 1  Id c: type int [mem: Local  size: 1  loc: -4] [line: 24]
.   .   .   .   Child: 1  Op >= : type bool [line: 24]
.   .   .   .   .   Child: 0  Id c: type int [mem: Local  size: 1  loc: -4] [line: 24]
.   .   .   .   .   Child: 1  Id a: type int [mem: Local  size: 1  loc: -2] [line: 24]
.   .   Sibling: 17  Call outnl: type void [line: 25]
.   .   Sibling: 18  Assign = : type int [line: 27]
.   .   .   Child: 0  Id b: type int [mem: Local  size: 1  loc: -3] [line: 27]
.   .   .   Child: 1  Const 11 : type int [line: 27]
.   .   Sibling: 19  Assign = : type int [line: 28]
.   .   .   Child: 0  Id c: type int [mem: Local  size: 1  loc: -4] [line: 28]
.   .   .   Child: 1  Const 213 : type int [line: 28]
.   .   Sibling: 20  Assign = : type int [line: 29]
.   .   .   Child: 0  Id a: type int [mem: Local  size: 1  loc: -2] [line: 29]
.   .   .   Child: 1  Const 4133 : type int [line: 29]
.   .   Sibling: 21  Call outputb: type void [line: 31]
.   .   .   Child: 0  Op or : type bool [line: 31]
.   .   .   .   Child: 0  Op > : type bool [line: 31]
.   .   .   .   .   Child: 0  Id a: type int [mem: Local  size: 1  loc: -2] [line: 31]
.   .   .   .   .   Child: 1  Id b: type int [mem: Local  size: 1  loc: -3] [line: 31]
.   .   .   .   Child: 1  Op and : type bool [line: 31]
.   .   .   .   .   Child: 0  Op <= : type bool [line: 31]
.   .   .   .   .   .   Child: 0  Id b: type int [mem: Local  size: 1  loc: -3] [line: 31]
.   .   .   .   .   .   Child: 1  Id c: type int [mem: Local  size: 1  loc: -4] [line: 31]
.   .   .   .   .   Child: 1  Op >= : type bool [line: 31]
.   .   .   .   .   .   Child: 0  Id c: type int [mem: Local  size: 1  loc: -4] [line: 31]
.   .   .   .   .   .   Child: 1  Id a: type int [mem: Local  size: 1  loc: -2] [line: 31]
.   .   Sibling: 22  Call outputb: type void [line: 32]
.   .   .   Child: 0  Op or : type bool [line: 32]
.   .   .   .   Child: 0  Op and : type bool [line: 32]
.   .   .   .   .   Child: 0  Op > : type bool [line: 32]
.   .   .   .   .   .   Child: 0  Id a: type int [mem: Local  size: 1  loc: -2] [line: 32]
.   .   .   .   .   .   Child: 1  Id b: type int [mem: Local  size: 1  loc: -3] [line: 32]
.   .   .   .   .   Child: 1  Op <= : type bool [line: 32]
.   .   .   .   .   .   Child: 0  Id b: type int [mem: Local  size: 1  loc: -3] [line: 32]
.   .   .   .   .   .   Child: 1  Id c: type int [mem: Local  size: 1  loc: -4] [line: 32]
.   .   .   .   Child: 1  Op >= : type bool [line: 32]
.   .   .   .   .   Child: 0  Id c: type int [mem: Local  size: 1  loc: -4] [line: 32]
.   .   .   .   .   Child: 1  Id a: type int [mem: Local  size: 1  loc: -2] [line: 32]
.   .   Sibling: 23  Call outputb: type void [line: 33]
.   .   .   Child: 0  Op or : type bool [line: 33]
.   .   .   .   Child: 0  Op and : type bool [line: 33]
.   .   .   .   .   Child: 0  Op > : type bool [line: 33]
.   .   .   .   .   .   Child: 0  Id a: type int [mem: Local  size: 1  loc: -2] [line: 33]
.   .   .   .   .   .   Child: 1  Id b: type int [mem: Local  size: 1  loc: -3] [line: 33]
.   .   .   .   .   Child: 1  Op <= : type bool [line: 33]
.   .   .   .   .   .   Child: 0  Id b: type int [mem: Local  size: 1  loc: -3] [line: 33]
.   .   .   .   .   .   Child: 1  Id c: type int [mem: Local  size: 1  loc: -4] [line: 33]
.   .   .   .   Child: 1  Op and : type bool [line: 33]
.   .   .   .   .   Child: 0  Op >= : type bool [line: 33]
.   .   .   .   .   .   Child: 0  Id c: type int [mem: Local  size: 1  loc: -4] [line: 33]
.   .   .   .   .   .   Child: 1  Id a: type int [mem: Local  size: 1  loc: -2] [line: 33]
.   .   .   .   .   Child: 1  Op >= : type bool [line: 33]
.   .   .   .   .   .   Child: 0  Id c: type int [mem: Local  size: 1  loc: -4] [line: 33]
.   .   .   .   .   .   Child: 1  Id a: type int [mem: Local  size: 1  loc: -2] [line: 33]
.   .   Sibling: 24  Call outputb: type void [line: 34]
.   .   .   Child: 0  Op or : type bool [line: 34]
.   .   .   .   Child: 0  Op not : type bool [line: 34]
.   .   .   .   .   Child: 0  Op > : type bool [line: 34]
.   .   .   .   .   .   Child: 0  Id a: type int [mem: Local  size: 1  loc: -2] [line: 34]
.   .   .   .   .   .   Child: 1  Id b: type int [mem: Local  size: 1  loc: -3] [line: 34]
.   .   .   .   Child: 1  Op and : type bool [line: 34]
.   .   .   .   .   Child: 0  Op <= : type bool [line: 34]
.   .   .   .   .   .   Child: 0  Id b: type int [mem: Local  size: 1  loc: -3] [line: 34]
.   .   .   .   .   .   Child: 1  Id c: type int [mem: Local  size: 1  loc: -4] [line: 34]
.   .   .   .   .   Child: 1  Op >= : type bool [line: 34]
.   .   .   .   .   .   Child: 0  Id c: type int [mem: Local  size: 1  loc: -4] [line: 34]
.   .   .   .   .   .   Child: 1  Id a: type int [mem: Local  size: 1  loc: -2] [line: 34]
.   .   Sibling: 25  Call outputb: type void [line: 35]
.   .   .   Child: 0  Op or : type bool [line: 35]
.   .   .   .   Child: 0  Op and : type bool [line: 35]
.   .   .   .   .   Child: 0  Op not : type bool [line: 35]
.   .   .   .   .   .   Child: 0  Op > : type bool [line: 35]
.   .   .   .   .   .   .   Child: 0  Id a: type int [mem: Local  size: 1  loc: -2] [line: 35]
.   .   .   .   .   .   .   Child: 1  Id b: type int [mem: Local  size: 1  loc: -3] [line: 35]
.   .   .   .   .   Child: 1  Op <= : type bool [line: 35]
.   .   .   .   .   .   Child: 0  Id b: type int [mem: Local  size: 1  loc: -3] [line: 35]
.   .   .   .   .   .   Child: 1  Id c: type int [mem: Local  size: 1  loc: -4] [line: 35]
.   .   .   .   Child: 1  Op >= : type bool [line: 35]
.   .   .   .   .   Child: 0  Id c: type int [mem: Local  size: 1  loc: -4] [line: 35]
.   .   .   .   .   Child: 1  Id a: type int [mem: Local  size: 1  loc: -2] [line: 35]
.   .   Sibling: 26  Call outnl: type void [line: 36]
Number of warnings: 0
Number of errors: 0
