Var x: array of type int [mem: Global  size: 8  loc: -1] [line: 2]
Sibling: 1  Func main: returns type void [line: 4]
.   Child: 1  Compound [line: 5]
.   .   Child: 1  Assign = : type int [line: 6]
.   .   .   Child: 0  Op [ : type int [line: 6]
.   .   .   .   Child: 0  Id x: array of type int [mem: Global  size: 8  loc: -1] [line: 6]
.   .   .   .   Child: 1  Const 3 : type int [line: 6]
.   .   .   Child: 1  Const 1023 : type int [line: 6]
.   .   Sibling: 1  Call output: type void [line: 7]
.   .   .   Child: 0  Assign ++ : type int [line: 7]
.   .   .   .   Child: 0  Op [ : type int [line: 7]
.   .   .   .   .   Child: 0  Id x: array of type int [mem: Global  size: 8  loc: -1] [line: 7]
.   .   .   .   .   Child: 1  Const 3 : type int [line: 7]
.   .   Sibling: 2  Call outnl: type void [line: 8]
.   .   Sibling: 3  Call output: type void [line: 9]
.   .   .   Child: 0  Op [ : type int [line: 9]
.   .   .   .   Child: 0  Id x: array of type int [mem: Global  size: 8  loc: -1] [line: 9]
.   .   .   .   Child: 1  Const 3 : type int [line: 9]
.   .   Sibling: 4  Call outnl: type void [line: 10]
.   .   Sibling: 5  Call output: type void [line: 12]
.   .   .   Child: 0  Assign -- : type int [line: 12]
.   .   .   .   Child: 0  Op [ : type int [line: 12]
.   .   .   .   .   Child: 0  Id x: array of type int [mem: Global  size: 8  loc: -1] [line: 12]
.   .   .   .   .   Child: 1  Const 3 : type int [line: 12]
.   .   Sibling: 6  Call outnl: type void [line: 13]
.   .   Sibling: 7  Call output: type void [line: 14]
.   .   .   Child: 0  Op [ : type int [line: 14]
.   .   .   .   Child: 0  Id x: array of type int [mem: Global  size: 8  loc: -1] [line: 14]
.   .   .   .   Child: 1  Const 3 : type int [line: 14]
.   .   Sibling: 8  Call outnl: type void [line: 15]
Number of warnings: 0
Number of errors: 0
