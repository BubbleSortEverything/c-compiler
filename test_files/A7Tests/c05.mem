Var x: array of type int [mem: Global  size: 4  loc: -1] [line: 2]
Sibling: 1  Var y: array of type int [mem: Global  size: 5  loc: -5] [line: 3]
Sibling: 2  Func main: returns type void [line: 5]
.   Child: 1  Compound [line: 6]
.   .   Child: 1  Assign = : type int [line: 7]
.   .   .   Child: 0  Op [ : type int [line: 7]
.   .   .   .   Child: 0  Id x: array of type int [mem: Global  size: 4  loc: -1] [line: 7]
.   .   .   .   Child: 1  Const 2 : type int [line: 7]
.   .   .   Child: 1  Const 73 : type int [line: 7]
.   .   Sibling: 1  Assign = : type int [line: 8]
.   .   .   Child: 0  Op [ : type int [line: 8]
.   .   .   .   Child: 0  Id y: array of type int [mem: Global  size: 5  loc: -5] [line: 8]
.   .   .   .   Child: 1  Const 1 : type int [line: 8]
.   .   .   Child: 1  Const 211 : type int [line: 8]
.   .   Sibling: 2  Call output: type void [line: 9]
.   .   .   Child: 0  Op + : type int [line: 9]
.   .   .   .   Child: 0  Op [ : type int [line: 9]
.   .   .   .   .   Child: 0  Id x: array of type int [mem: Global  size: 4  loc: -1] [line: 9]
.   .   .   .   .   Child: 1  Const 2 : type int [line: 9]
.   .   .   .   Child: 1  Op [ : type int [line: 9]
.   .   .   .   .   Child: 0  Id y: array of type int [mem: Global  size: 5  loc: -5] [line: 9]
.   .   .   .   .   Child: 1  Const 1 : type int [line: 9]
.   .   Sibling: 3  Call outnl: type void [line: 10]
Number of warnings: 0
Number of errors: 0
