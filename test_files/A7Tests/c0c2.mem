Func main: returns type void [line: 3]
.   Child: 1  Compound [line: 4]
.   .   Child: 0  Var x: type char [mem: Local  size: 1  loc: -2] [line: 5]
.   .   Sibling: 1  Var y: type char [mem: Local  size: 1  loc: -3] [line: 6]
.   .   Sibling: 2  Var z: type char [mem: Local  size: 1  loc: -4] [line: 7]
.   .   Child: 1  Assign = : type char [line: 9]
.   .   .   Child: 0  Id x: type char [mem: Local  size: 1  loc: -2] [line: 9]
.   .   .   Child: 1  Const: 'A' : type char [line: 9]
.   .   Sibling: 1  Assign = : type char [line: 10]
.   .   .   Child: 0  Id y: type char [mem: Local  size: 1  loc: -3] [line: 10]
.   .   .   Child: 1  Const: 'B' : type char [line: 10]
.   .   Sibling: 2  Call outputc: type void [line: 11]
.   .   .   Child: 0  Id x: type char [mem: Local  size: 1  loc: -2] [line: 11]
.   .   Sibling: 3  Call outputc: type void [line: 12]
.   .   .   Child: 0  Id y: type char [mem: Local  size: 1  loc: -3] [line: 12]
.   .   Sibling: 4  Call outputc: type void [line: 13]
.   .   .   Child: 0  Assign = : type char [line: 13]
.   .   .   .   Child: 0  Id z: type char [mem: Local  size: 1  loc: -4] [line: 13]
.   .   .   .   Child: 1  Assign = : type char [line: 13]
.   .   .   .   .   Child: 0  Id x: type char [mem: Local  size: 1  loc: -2] [line: 13]
.   .   .   .   .   Child: 1  Id y: type char [mem: Local  size: 1  loc: -3] [line: 13]
.   .   Sibling: 5  Call outputc: type void [line: 14]
.   .   .   Child: 0  Id x: type char [mem: Local  size: 1  loc: -2] [line: 14]
.   .   Sibling: 6  Call outputc: type void [line: 15]
.   .   .   Child: 0  Id y: type char [mem: Local  size: 1  loc: -3] [line: 15]
.   .   Sibling: 7  Call outputc: type void [line: 16]
.   .   .   Child: 0  Id z: type char [mem: Local  size: 1  loc: -4] [line: 16]
.   .   Sibling: 8  Call outnl: type void [line: 17]
Number of warnings: 0
Number of errors: 0
