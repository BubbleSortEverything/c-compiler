Func main: returns type void [line: 2]
.   Child: 1  Compound [line: 3]
.   .   Child: 0  Var x: type bool [mem: Local  size: 1  loc: -2] [line: 4]
.   .   Child: 1  If [line: 6]
.   .   .   Child: 0  Const false : type bool [line: 6]
.   .   .   Child: 1  If [line: 6]
.   .   .   .   Child: 0  Const true : type bool [line: 6]
.   .   .   .   Child: 1  Call output: type void [line: 6]
.   .   .   .   .   Child: 0  Const 13 : type int [line: 6]
.   .   Sibling: 1  If [line: 7]
.   .   .   Child: 0  Const false : type bool [line: 7]
.   .   .   Child: 1  If [line: 7]
.   .   .   .   Child: 0  Const false : type bool [line: 7]
.   .   .   .   Child: 1  Call output: type void [line: 7]
.   .   .   .   .   Child: 0  Const 23 : type int [line: 7]
.   .   Sibling: 2  Assign = : type bool [line: 9]
.   .   .   Child: 0  Id x: type bool [mem: Local  size: 1  loc: -2] [line: 9]
.   .   .   Child: 1  Const false : type bool [line: 9]
.   .   Sibling: 3  If [line: 10]
.   .   .   Child: 0  Const false : type bool [line: 10]
.   .   .   Child: 1  If [line: 10]
.   .   .   .   Child: 0  Id x: type bool [mem: Local  size: 1  loc: -2] [line: 10]
.   .   .   .   Child: 1  Call output: type void [line: 10]
.   .   .   .   .   Child: 0  Const 44 : type int [line: 10]
.   .   Sibling: 4  If [line: 11]
.   .   .   Child: 0  Const false : type bool [line: 11]
.   .   .   Child: 1  If [line: 11]
.   .   .   .   Child: 0  Op not : type bool [line: 11]
.   .   .   .   .   Child: 0  Id x: type bool [mem: Local  size: 1  loc: -2] [line: 11]
.   .   .   .   Child: 1  Call output: type void [line: 11]
.   .   .   .   .   Child: 0  Const 55 : type int [line: 11]
.   .   Sibling: 5  If [line: 13]
.   .   .   Child: 0  Const false : type bool [line: 13]
.   .   .   Child: 1  If [line: 13]
.   .   .   .   Child: 0  Op > : type bool [line: 13]
.   .   .   .   .   Child: 0  Const 3 : type int [line: 13]
.   .   .   .   .   Child: 1  Const 1 : type int [line: 13]
.   .   .   .   Child: 1  Call output: type void [line: 13]
.   .   .   .   .   Child: 0  Const 987 : type int [line: 13]
.   .   Sibling: 6  If [line: 14]
.   .   .   Child: 0  Const false : type bool [line: 14]
.   .   .   Child: 1  If [line: 14]
.   .   .   .   Child: 0  Op < : type bool [line: 14]
.   .   .   .   .   Child: 0  Const 3 : type int [line: 14]
.   .   .   .   .   Child: 1  Const 1 : type int [line: 14]
.   .   .   .   Child: 1  Call output: type void [line: 14]
.   .   .   .   .   Child: 0  Const 211 : type int [line: 14]
.   .   Sibling: 7  If [line: 16]
.   .   .   Child: 0  Const false : type bool [line: 16]
.   .   .   Child: 1  If [line: 16]
.   .   .   .   Child: 0  Const true : type bool [line: 16]
.   .   .   .   Child: 1  Call output: type void [line: 16]
.   .   .   .   .   Child: 0  Const 13 : type int [line: 16]
.   .   .   .   Child: 2  Call output: type void [line: 16]
.   .   .   .   .   Child: 0  Const 51 : type int [line: 16]
.   .   Sibling: 8  If [line: 17]
.   .   .   Child: 0  Const false : type bool [line: 17]
.   .   .   Child: 1  If [line: 17]
.   .   .   .   Child: 0  Const false : type bool [line: 17]
.   .   .   .   Child: 1  Call output: type void [line: 17]
.   .   .   .   .   Child: 0  Const 23 : type int [line: 17]
.   .   .   .   Child: 2  Call output: type void [line: 17]
.   .   .   .   .   Child: 0  Const 451 : type int [line: 17]
.   .   Sibling: 9  Assign = : type bool [line: 19]
.   .   .   Child: 0  Id x: type bool [mem: Local  size: 1  loc: -2] [line: 19]
.   .   .   Child: 1  Const false : type bool [line: 19]
.   .   Sibling: 10  If [line: 20]
.   .   .   Child: 0  Const false : type bool [line: 20]
.   .   .   Child: 1  If [line: 20]
.   .   .   .   Child: 0  Id x: type bool [mem: Local  size: 1  loc: -2] [line: 20]
.   .   .   .   Child: 1  Call output: type void [line: 20]
.   .   .   .   .   Child: 0  Const 44 : type int [line: 20]
.   .   .   .   Child: 2  Call output: type void [line: 20]
.   .   .   .   .   Child: 0  Const 514 : type int [line: 20]
.   .   Sibling: 11  If [line: 21]
.   .   .   Child: 0  Const false : type bool [line: 21]
.   .   .   Child: 1  If [line: 21]
.   .   .   .   Child: 0  Op not : type bool [line: 21]
.   .   .   .   .   Child: 0  Id x: type bool [mem: Local  size: 1  loc: -2] [line: 21]
.   .   .   .   Child: 1  Call output: type void [line: 21]
.   .   .   .   .   Child: 0  Const 55 : type int [line: 21]
.   .   .   .   Child: 2  Call output: type void [line: 21]
.   .   .   .   .   Child: 0  Const 1514 : type int [line: 21]
.   .   Sibling: 12  If [line: 23]
.   .   .   Child: 0  Const false : type bool [line: 23]
.   .   .   Child: 1  If [line: 23]
.   .   .   .   Child: 0  Op > : type bool [line: 23]
.   .   .   .   .   Child: 0  Const 3 : type int [line: 23]
.   .   .   .   .   Child: 1  Const 1 : type int [line: 23]
.   .   .   .   Child: 1  Call output: type void [line: 23]
.   .   .   .   .   Child: 0  Const 987 : type int [line: 23]
.   .   .   .   Child: 2  Call output: type void [line: 23]
.   .   .   .   .   Child: 0  Const 114 : type int [line: 23]
.   .   Sibling: 13  If [line: 24]
.   .   .   Child: 0  Const false : type bool [line: 24]
.   .   .   Child: 1  If [line: 24]
.   .   .   .   Child: 0  Op < : type bool [line: 24]
.   .   .   .   .   Child: 0  Const 3 : type int [line: 24]
.   .   .   .   .   Child: 1  Const 1 : type int [line: 24]
.   .   .   .   Child: 1  Call output: type void [line: 24]
.   .   .   .   .   Child: 0  Const 211 : type int [line: 24]
.   .   .   .   Child: 2  Call output: type void [line: 24]
.   .   .   .   .   Child: 0  Const 1614 : type int [line: 24]
Number of warnings: 0
Number of errors: 0
