Var k: array of type int [mem: Global  size: 21  loc: -1] [line: 3]
Sibling: 1  Func factorial: returns type int [line: 5]
.   Child: 0  Param n: type int [mem: Param  size: 1  loc: -2] [line: 5]
.   Child: 1  Compound [line: 6]
.   .   Child: 1  If [line: 7]
.   .   .   Child: 0  Op < : type bool [line: 7]
.   .   .   .   Child: 0  Id n: type int [mem: Param  size: 1  loc: -2] [line: 7]
.   .   .   .   Child: 1  Const 2 : type int [line: 7]
.   .   .   Child: 1  Compound [line: 7]
.   .   .   .   Child: 1  Assign = : type int [line: 8]
.   .   .   .   .   Child: 0  Op [ : type int [line: 8]
.   .   .   .   .   .   Child: 0  Id k: array of type int [mem: Global  size: 21  loc: -1] [line: 8]
.   .   .   .   .   .   Child: 1  Id n: type int [mem: Param  size: 1  loc: -2] [line: 8]
.   .   .   .   .   Child: 1  Const 1 : type int [line: 8]
.   .   .   Child: 2  Compound [line: 10]
.   .   .   .   Child: 1  Assign = : type int [line: 11]
.   .   .   .   .   Child: 0  Op [ : type int [line: 11]
.   .   .   .   .   .   Child: 0  Id k: array of type int [mem: Global  size: 21  loc: -1] [line: 11]
.   .   .   .   .   .   Child: 1  Id n: type int [mem: Param  size: 1  loc: -2] [line: 11]
.   .   .   .   .   Child: 1  Op * : type int [line: 11]
.   .   .   .   .   .   Child: 0  Id n: type int [mem: Param  size: 1  loc: -2] [line: 11]
.   .   .   .   .   .   Child: 1  Call factorial: type int [line: 11]
.   .   .   .   .   .   .   Child: 0  Op - : type int [line: 11]
.   .   .   .   .   .   .   .   Child: 0  Id n: type int [mem: Param  size: 1  loc: -2] [line: 11]
.   .   .   .   .   .   .   .   Child: 1  Const 1 : type int [line: 11]
.   .   Sibling: 1  Return [line: 14]
.   .   .   Child: 0  Op [ : type int [line: 14]
.   .   .   .   Child: 0  Id k: array of type int [mem: Global  size: 21  loc: -1] [line: 14]
.   .   .   .   Child: 1  Id n: type int [mem: Param  size: 1  loc: -2] [line: 14]
Sibling: 2  Func main: returns type void [line: 17]
.   Child: 1  Compound [line: 18]
.   .   Child: 0  Var n: type int [mem: Local  size: 1  loc: -2] [line: 19]
.   .   Child: 1  Assign = : type int [line: 21]
.   .   .   Child: 0  Id n: type int [mem: Local  size: 1  loc: -2] [line: 21]
.   .   .   Child: 1  Const 10 : type int [line: 21]
.   .   Sibling: 1  Assign = : type int [line: 22]
.   .   .   Child: 0  Id n: type int [mem: Local  size: 1  loc: -2] [line: 22]
.   .   .   Child: 1  Call factorial: type int [line: 22]
.   .   .   .   Child: 0  Id n: type int [mem: Local  size: 1  loc: -2] [line: 22]
.   .   Sibling: 2  Call output: type void [line: 23]
.   .   .   Child: 0  Id n: type int [mem: Local  size: 1  loc: -2] [line: 23]
.   .   Sibling: 3  Call outnl: type void [line: 24]
Number of warnings: 0
Number of errors: 0
