Var: turns of type int [mem: Global loc: 0 size: 1] [line: 30]
Sibling: 1  Var: n of type int [mem: Global loc: -1 size: 1] [line: 30]
Sibling: 2  Var: r of array of type int [mem: Global loc: -3 size: 129] [line: 30]
Sibling: 3  Var: known of array of type int [mem: Global loc: -132 size: 5] [line: 30]
Sibling: 4  Var: guess of array of type int [mem: Global loc: -137 size: 5] [line: 30]
Sibling: 5  Func: rand returns of type int [line: 38]
.   Child: 1  Compound [line: 39]
.   .   Child: 1  If [line: 40]
.   .   .   Child: 0  Op: < of type bool [line: 40]
.   .   .   .   Child: 0  Id: n of type int [mem: Global loc: -1 size: 1] [line: 40]
.   .   .   .   Child: 1  Const 0 of type int [line: 40]
.   .   .   Child: 1  Assign: = of type int [line: 40]
.   .   .   .   Child: 0  Id: n of type int [mem: Global loc: -1 size: 1] [line: 40]
.   .   .   .   Child: 1  Op: chsign of type int [line: 40]
.   .   .   .   .   Child: 0  Id: n of type int [mem: Global loc: -1 size: 1] [line: 40]
.   .   Sibling: 1  If [line: 41]
.   .   .   Child: 0  Op: > of type bool [line: 41]
.   .   .   .   Child: 0  Id: n of type int [mem: Global loc: -1 size: 1] [line: 41]
.   .   .   .   Child: 1  Const 128 of type int [line: 41]
.   .   .   Child: 1  Assign: = of type int [line: 41]
.   .   .   .   Child: 0  Id: n of type int [mem: Global loc: -1 size: 1] [line: 41]
.   .   .   .   Child: 1  Op: % of type int [line: 41]
.   .   .   .   .   Child: 0  Id: n of type int [mem: Global loc: -1 size: 1] [line: 41]
.   .   .   .   .   Child: 1  Const 128 of type int [line: 41]
.   .   Sibling: 2  Assign: ++ of type int [line: 42]
.   .   .   Child: 0  Id: n of type int [mem: Global loc: -1 size: 1] [line: 42]
.   .   Sibling: 3  Assign: = of type int [line: 43]
.   .   .   Child: 0  Op: [ of type int [line: 43]
.   .   .   .   Child: 0  Id: r of array of type int [mem: Global loc: -3 size: 129] [line: 43]
.   .   .   .   Child: 1  Id: n of type int [mem: Global loc: -1 size: 1] [line: 43]
.   .   .   Child: 1  Op: % of type int [line: 43]
.   .   .   .   Child: 0  Op: + of type int [line: 43]
.   .   .   .   .   Child: 0  Op: * of type int [line: 43]
.   .   .   .   .   .   Child: 0  Const 1366 of type int [line: 43]
.   .   .   .   .   .   Child: 1  Op: [ of type int [line: 43]
.   .   .   .   .   .   .   Child: 0  Id: r of array of type int [mem: Global loc: -3 size: 129] [line: 43]
.   .   .   .   .   .   .   Child: 1  Op: - of type int [line: 43]
.   .   .   .   .   .   .   .   Child: 0  Id: n of type int [mem: Global loc: -1 size: 1] [line: 43]
.   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 43]
.   .   .   .   .   Child: 1  Const 150889 of type int [line: 43]
.   .   .   .   Child: 1  Const 714025 of type int [line: 43]
.   .   Sibling: 4  Return [line: 44]
.   .   .   Child: 0  Op: [ of type int [line: 44]
.   .   .   .   Child: 0  Id: r of array of type int [mem: Global loc: -3 size: 129] [line: 44]
.   .   .   .   Child: 1  Id: n of type int [mem: Global loc: -1 size: 1] [line: 44]
Sibling: 6  Func: search returns of type bool [line: 47]
.   Child: 0  Parm: a array of of type int [mem: Parameter loc: -2 size: 1] [line: 47]
.   Sibling: 1  Parm: k of type int [mem: Parameter loc: -3 size: 1] [line: 47]
.   Child: 1  Compound [line: 48]
.   .   Child: 0  Var: i of type int [mem: Local loc: -4 size: 1] [line: 49]
.   .   Child: 1  Assign: = of type int [line: 52]
.   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 52]
.   .   .   Child: 1  Const 0 of type int [line: 52]
.   .   Sibling: 1  While [line: 53]
.   .   .   Child: 0  Op: < of type bool [line: 53]
.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 53]
.   .   .   .   Child: 1  Const 4 of type int [line: 53]
.   .   .   Child: 1  Compound [line: 53]
.   .   .   .   Child: 1  If [line: 54]
.   .   .   .   .   Child: 0  Op: == of type bool [line: 54]
.   .   .   .   .   .   Child: 0  Op: [ of type int [line: 54]
.   .   .   .   .   .   .   Child: 0  Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 54]
.   .   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -4 size: 1] [line: 54]
.   .   .   .   .   .   Child: 1  Id: k of type int [mem: Parameter loc: -3 size: 1] [line: 54]
.   .   .   .   .   Child: 1  Return [line: 54]
.   .   .   .   .   .   Child: 0  Const true of type bool [line: 54]
.   .   .   .   Sibling: 1  Assign: ++ of type int [line: 55]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 55]
.   .   Sibling: 2  Return [line: 58]
.   .   .   Child: 0  Const false of type bool [line: 58]
Sibling: 7  Func: check returns of type bool [line: 61]
.   Child: 1  Compound [line: 62]
.   .   Child: 0  Var: i of type int [mem: Local loc: -2 size: 1] [line: 63]
.   .   Sibling: 1  Var: c1 of type int [mem: Local loc: -3 size: 1] [line: 63]
.   .   Sibling: 2  Var: c2 of type int [mem: Local loc: -4 size: 1] [line: 63]
.   .   Child: 1  Assign: = of type int [line: 66]
.   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 66]
.   .   .   Child: 1  Assign: = of type int [line: 66]
.   .   .   .   Child: 0  Id: c1 of type int [mem: Local loc: -3 size: 1] [line: 66]
.   .   .   .   Child: 1  Assign: = of type int [line: 66]
.   .   .   .   .   Child: 0  Id: c2 of type int [mem: Local loc: -4 size: 1] [line: 66]
.   .   .   .   .   Child: 1  Const 0 of type int [line: 66]
.   .   Sibling: 1  While [line: 67]
.   .   .   Child: 0  Op: < of type bool [line: 67]
.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 67]
.   .   .   .   Child: 1  Const 4 of type int [line: 67]
.   .   .   Child: 1  Compound [line: 67]
.   .   .   .   Child: 1  If [line: 68]
.   .   .   .   .   Child: 0  Op: == of type bool [line: 68]
.   .   .   .   .   .   Child: 0  Op: [ of type int [line: 68]
.   .   .   .   .   .   .   Child: 0  Id: known of array of type int [mem: Global loc: -132 size: 5] [line: 68]
.   .   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -2 size: 1] [line: 68]
.   .   .   .   .   .   Child: 1  Op: [ of type int [line: 68]
.   .   .   .   .   .   .   Child: 0  Id: guess of array of type int [mem: Global loc: -137 size: 5] [line: 68]
.   .   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -2 size: 1] [line: 68]
.   .   .   .   .   Child: 1  Assign: ++ of type int [line: 68]
.   .   .   .   .   .   Child: 0  Id: c2 of type int [mem: Local loc: -4 size: 1] [line: 68]
.   .   .   .   .   Child: 2  If [line: 69]
.   .   .   .   .   .   Child: 0  Call: search of type bool [line: 69]
.   .   .   .   .   .   .   Child: 0  Id: known of array of type int [mem: Global loc: -132 size: 5] [line: 69]
.   .   .   .   .   .   .   Sibling: 1  Op: [ of type int [line: 69]
.   .   .   .   .   .   .   .   Child: 0  Id: guess of array of type int [mem: Global loc: -137 size: 5] [line: 69]
.   .   .   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -2 size: 1] [line: 69]
.   .   .   .   .   .   Child: 1  Assign: ++ of type int [line: 69]
.   .   .   .   .   .   .   Child: 0  Id: c1 of type int [mem: Local loc: -3 size: 1] [line: 69]
.   .   .   .   Sibling: 1  Assign: ++ of type int [line: 70]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 70]
.   .   Sibling: 2  Call: output of type void [line: 73]
.   .   .   Child: 0  Id: c1 of type int [mem: Local loc: -3 size: 1] [line: 73]
.   .   Sibling: 3  Call: output of type void [line: 74]
.   .   .   Child: 0  Id: c2 of type int [mem: Local loc: -4 size: 1] [line: 74]
.   .   Sibling: 4  Call: outnl of type void [line: 75]
.   .   Sibling: 5  If [line: 77]
.   .   .   Child: 0  Op: == of type bool [line: 77]
.   .   .   .   Child: 0  Id: c2 of type int [mem: Local loc: -4 size: 1] [line: 77]
.   .   .   .   Child: 1  Const 4 of type int [line: 77]
.   .   .   Child: 1  Return [line: 78]
.   .   .   .   Child: 0  Const true of type bool [line: 78]
.   .   .   Child: 2  Return [line: 80]
.   .   .   .   Child: 0  Const false of type bool [line: 80]
Sibling: 8  Func: turn returns of type bool [line: 83]
.   Child: 1  Compound [line: 84]
.   .   Child: 0  Var: i of type int [mem: Local loc: -2 size: 1] [line: 85]
.   .   Child: 1  Assign: ++ of type int [line: 88]
.   .   .   Child: 0  Id: turns of type int [mem: Global loc: 0 size: 1] [line: 88]
.   .   Sibling: 1  Call: output of type void [line: 89]
.   .   .   Child: 0  Id: turns of type int [mem: Global loc: 0 size: 1] [line: 89]
.   .   Sibling: 2  Call: outnl of type void [line: 90]
.   .   Sibling: 3  If [line: 92]
.   .   .   Child: 0  Op: <= of type bool [line: 92]
.   .   .   .   Child: 0  Id: turns of type int [mem: Global loc: 0 size: 1] [line: 92]
.   .   .   .   Child: 1  Const 20 of type int [line: 92]
.   .   .   Child: 1  Compound [line: 92]
.   .   .   .   Child: 1  Assign: = of type int [line: 94]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 94]
.   .   .   .   .   Child: 1  Const 0 of type int [line: 94]
.   .   .   .   Sibling: 1  While [line: 95]
.   .   .   .   .   Child: 0  Op: < of type bool [line: 95]
.   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 95]
.   .   .   .   .   .   Child: 1  Const 4 of type int [line: 95]
.   .   .   .   .   Child: 1  Compound [line: 95]
.   .   .   .   .   .   Child: 1  Assign: = of type int [line: 96]
.   .   .   .   .   .   .   Child: 0  Op: [ of type int [line: 96]
.   .   .   .   .   .   .   .   Child: 0  Id: guess of array of type int [mem: Global loc: -137 size: 5] [line: 96]
.   .   .   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -2 size: 1] [line: 96]
.   .   .   .   .   .   .   Child: 1  Call: input of type int [line: 96]
.   .   .   .   .   .   Sibling: 1  If [line: 97]
.   .   .   .   .   .   .   Child: 0  Op: < of type bool [line: 97]
.   .   .   .   .   .   .   .   Child: 0  Op: [ of type int [line: 97]
.   .   .   .   .   .   .   .   .   Child: 0  Id: guess of array of type int [mem: Global loc: -137 size: 5] [line: 97]
.   .   .   .   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -2 size: 1] [line: 97]
.   .   .   .   .   .   .   .   Child: 1  Const 0 of type int [line: 97]
.   .   .   .   .   .   .   Child: 1  Return [line: 98]
.   .   .   .   .   .   .   .   Child: 0  Const false of type bool [line: 98]
.   .   .   .   .   .   Sibling: 2  If [line: 99]
.   .   .   .   .   .   .   Child: 0  Op: > of type bool [line: 99]
.   .   .   .   .   .   .   .   Child: 0  Op: [ of type int [line: 99]
.   .   .   .   .   .   .   .   .   Child: 0  Id: guess of array of type int [mem: Global loc: -137 size: 5] [line: 99]
.   .   .   .   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -2 size: 1] [line: 99]
.   .   .   .   .   .   .   .   Child: 1  Const 10 of type int [line: 99]
.   .   .   .   .   .   .   Child: 1  Assign: = of type int [line: 99]
.   .   .   .   .   .   .   .   Child: 0  Op: [ of type int [line: 99]
.   .   .   .   .   .   .   .   .   Child: 0  Id: guess of array of type int [mem: Global loc: -137 size: 5] [line: 99]
.   .   .   .   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -2 size: 1] [line: 99]
.   .   .   .   .   .   .   .   Child: 1  Op: % of type int [line: 99]
.   .   .   .   .   .   .   .   .   Child: 0  Op: [ of type int [line: 99]
.   .   .   .   .   .   .   .   .   .   Child: 0  Id: guess of array of type int [mem: Global loc: -137 size: 5] [line: 99]
.   .   .   .   .   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -2 size: 1] [line: 99]
.   .   .   .   .   .   .   .   .   Child: 1  Const 10 of type int [line: 99]
.   .   .   .   .   .   Sibling: 3  Assign: ++ of type int [line: 100]
.   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 100]
.   .   .   .   Sibling: 2  If [line: 104]
.   .   .   .   .   Child: 0  Call: check of type bool [line: 104]
.   .   .   .   .   Child: 1  Compound [line: 104]
.   .   .   .   .   .   Child: 1  Assign: = of type int [line: 105]
.   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 105]
.   .   .   .   .   .   .   Child: 1  Const 0 of type int [line: 105]
.   .   .   .   .   .   Sibling: 1  While [line: 106]
.   .   .   .   .   .   .   Child: 0  Op: < of type bool [line: 106]
.   .   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 106]
.   .   .   .   .   .   .   .   Child: 1  Const 10 of type int [line: 106]
.   .   .   .   .   .   .   Child: 1  Compound [line: 106]
.   .   .   .   .   .   .   .   Child: 1  Call: outputb of type void [line: 107]
.   .   .   .   .   .   .   .   .   Child: 0  Const true of type bool [line: 107]
.   .   .   .   .   .   .   .   Sibling: 1  Assign: ++ of type int [line: 108]
.   .   .   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 108]
.   .   .   .   .   .   Sibling: 2  Call: outnl of type void [line: 110]
.   .   .   .   .   .   Sibling: 3  Return [line: 111]
.   .   .   .   .   .   .   Child: 0  Const false of type bool [line: 111]
.   .   .   .   .   Child: 2  Compound [line: 112]
.   .   .   .   .   .   Child: 1  Return [line: 113]
.   .   .   .   .   .   .   Child: 0  Const true of type bool [line: 113]
.   .   Sibling: 4  Assign: = of type int [line: 118]
.   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 118]
.   .   .   Child: 1  Const 0 of type int [line: 118]
.   .   Sibling: 5  While [line: 119]
.   .   .   Child: 0  Op: < of type bool [line: 119]
.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 119]
.   .   .   .   Child: 1  Const 10 of type int [line: 119]
.   .   .   Child: 1  Compound [line: 119]
.   .   .   .   Child: 1  Call: outputb of type void [line: 120]
.   .   .   .   .   Child: 0  Const false of type bool [line: 120]
.   .   .   .   Sibling: 1  Assign: ++ of type int [line: 121]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 121]
.   .   Sibling: 6  Call: outnl of type void [line: 123]
.   .   Sibling: 7  Return [line: 124]
.   .   .   Child: 0  Const false of type bool [line: 124]
Sibling: 9  Func: main returns of type void [line: 127]
.   Child: 1  Compound [line: 128]
.   .   Child: 0  Var: i of type int [mem: Local loc: -2 size: 1] [line: 129]
.   .   Child: 1  Assign: = of type int [line: 132]
.   .   .   Child: 0  Id: n of type int [mem: Global loc: -1 size: 1] [line: 132]
.   .   .   Child: 1  Const 0 of type int [line: 132]
.   .   Sibling: 1  Assign: = of type int [line: 133]
.   .   .   Child: 0  Op: [ of type int [line: 133]
.   .   .   .   Child: 0  Id: r of array of type int [mem: Global loc: -3 size: 129] [line: 133]
.   .   .   .   Child: 1  Const 0 of type int [line: 133]
.   .   .   Child: 1  Call: input of type int [line: 133]
.   .   Sibling: 2  Call: outnl of type void [line: 134]
.   .   Sibling: 3  Assign: = of type int [line: 137]
.   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 137]
.   .   .   Child: 1  Const 0 of type int [line: 137]
.   .   Sibling: 4  While [line: 138]
.   .   .   Child: 0  Op: < of type bool [line: 138]
.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 138]
.   .   .   .   Child: 1  Const 4 of type int [line: 138]
.   .   .   Child: 1  Compound [line: 138]
.   .   .   .   Child: 1  Assign: = of type int [line: 139]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 139]
.   .   .   .   .   .   Child: 0  Id: known of array of type int [mem: Global loc: -132 size: 5] [line: 139]
.   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -2 size: 1] [line: 139]
.   .   .   .   .   Child: 1  Op: % of type int [line: 139]
.   .   .   .   .   .   Child: 0  Call: rand of type int [line: 139]
.   .   .   .   .   .   Child: 1  Const 10 of type int [line: 139]
.   .   .   .   Sibling: 1  Assign: ++ of type int [line: 140]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 140]
.   .   Sibling: 5  Assign: = of type int [line: 144]
.   .   .   Child: 0  Id: turns of type int [mem: Global loc: 0 size: 1] [line: 144]
.   .   .   Child: 1  Const 0 of type int [line: 144]
.   .   Sibling: 6  While [line: 145]
.   .   .   Child: 0  Call: turn of type bool [line: 145]
.   .   Sibling: 7  Call: outnl of type void [line: 148]
.   .   Sibling: 8  Assign: = of type int [line: 149]
.   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 149]
.   .   .   Child: 1  Const 0 of type int [line: 149]
.   .   Sibling: 9  While [line: 150]
.   .   .   Child: 0  Op: < of type bool [line: 150]
.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 150]
.   .   .   .   Child: 1  Const 4 of type int [line: 150]
.   .   .   Child: 1  Compound [line: 150]
.   .   .   .   Child: 1  Call: output of type void [line: 151]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 151]
.   .   .   .   .   .   Child: 0  Id: known of array of type int [mem: Global loc: -132 size: 5] [line: 151]
.   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -2 size: 1] [line: 151]
.   .   .   .   Sibling: 1  Call: outnl of type void [line: 152]
.   .   .   .   Sibling: 2  Assign: ++ of type int [line: 153]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 153]
.   .   Sibling: 10  Call: outnl of type void [line: 155]
Offset for end of global space: -141
